Grammar: CEBNF
TokenSplitter: Space
EmbeddedLanguage: true
ParentContext: HTML
ContextSensitive: true
SymbolTableSharing: hierarchical

/* CSS Grammar for Embedded HTML Parsing */
/* Supports CSS3+ features with cross-language validation */

/* Stylesheet Structure */
<css-stylesheet> ::= <css-rule>*

<css-rule> ::= <style-rule>
             | <at-rule>
             | <comment>
             | <whitespace>

/* Style Rules */
<style-rule> ::= <selector-list> "{" <declaration-list> "}"

<selector-list> ::= <selector> <selector-list-tail>?
<selector-list-tail> ::= "," <opt-whitespace> <selector-list>

<selector> ::= <simple-selector> <combinator-sequence>?
<combinator-sequence> ::= <combinator> <selector>

<simple-selector> ::= <element-selector>
                    | <id-selector>
                    | <class-selector>
                    | <attribute-selector>
                    | <pseudo-selector>
                    | <universal-selector>

/* Cross-Language Selectors */
<id-selector> ::= "#" @REFERENCE[HTML.id] <identifier>
<class-selector> ::= "." @REFERENCE[HTML.class] <identifier>

/* Standard Selectors */
<element-selector> ::= <tag-name>
<universal-selector> ::= "*"

<attribute-selector> ::= "[" <attribute-name> <attribute-operator>? <attribute-value>? "]"
<attribute-operator> ::= "=" | "~=" | "|=" | "^=" | "$=" | "*="

<pseudo-selector> ::= <pseudo-class> | <pseudo-element>
<pseudo-class> ::= ":" <pseudo-name> <pseudo-function>?
<pseudo-element> ::= "::" <pseudo-name>
<pseudo-function> ::= "(" <pseudo-args> ")"

/* Combinators */
<combinator> ::= <opt-whitespace> <combinator-symbol> <opt-whitespace>
<combinator-symbol> ::= ">" | "+" | "~" | <whitespace>

/* Declarations */
<declaration-list> ::= <opt-whitespace> <declaration>? <declaration-tail>*
<declaration-tail> ::= ";" <opt-whitespace> <declaration>?

<declaration> ::= <property> ":" <opt-whitespace> <value> <priority>?
<property> ::= @SYMBOL[css_property] <property-name>
<value> ::= <value-list>
<priority> ::= "!" <opt-whitespace> "important"

<value-list> ::= <value-item> <value-list-tail>?
<value-list-tail> ::= <value-separator> <value-list>
<value-separator> ::= <opt-whitespace> "," <opt-whitespace> | <whitespace>

<value-item> ::= <length>
               | <percentage>
               | <number>
               | <color>
               | <string>
               | <identifier>
               | <function-call>
               | <url-function>

/* At-Rules */
<at-rule> ::= <media-rule>
            | <import-rule>
            | <charset-rule>
            | <namespace-rule>
            | <keyframes-rule>
            | <font-face-rule>
            | <supports-rule>

<media-rule> ::= "@media" <whitespace> <media-query-list> "{" <css-rule>* "}"
<import-rule> ::= "@import" <whitespace> <import-value> <media-query-list>? ";"
<charset-rule> ::= "@charset" <whitespace> <string> ";"
<namespace-rule> ::= "@namespace" <whitespace> <namespace-prefix>? <namespace-uri> ";"

<keyframes-rule> ::= "@keyframes" <whitespace> <keyframes-name> "{" <keyframe-rule>* "}"
<keyframe-rule> ::= <keyframe-selector> "{" <declaration-list> "}"
<keyframe-selector> ::= <percentage> | "from" | "to"

<font-face-rule> ::= "@font-face" <whitespace> "{" <declaration-list> "}"

<supports-rule> ::= "@supports" <whitespace> <supports-condition> "{" <css-rule>* "}"
<supports-condition> ::= <supports-declaration> | <supports-function> | <supports-negation>
<supports-declaration> ::= "(" <declaration> ")"
<supports-negation> ::= "not" <whitespace> <supports-condition>

/* Media Queries */
<media-query-list> ::= <media-query> <media-query-tail>?
<media-query-tail> ::= "," <opt-whitespace> <media-query-list>

<media-query> ::= <media-type> <media-expression>*
                | <media-expression> <media-expression>*

<media-type> ::= "all" | "screen" | "print" | "speech" | <identifier>
<media-expression> ::= "and" <whitespace> "(" <media-feature> <media-value>? ")"
<media-feature> ::= <identifier>
<media-value> ::= ":" <opt-whitespace> <value-item>

/* Values and Units */
<length> ::= <number> <length-unit>
<length-unit> ::= "px" | "em" | "rem" | "vh" | "vw" | "%" | "pt" | "pc" | "in" | "cm" | "mm"

<percentage> ::= <number> "%"

<color> ::= <hex-color> | <rgb-function> | <rgba-function> | <hsl-function> | <color-name>
<hex-color> ::= "#" <hex-digit> <hex-digit> <hex-digit> <hex-digit>? <hex-digit>? <hex-digit>?
<rgb-function> ::= "rgb(" <color-value> "," <color-value> "," <color-value> ")"
<rgba-function> ::= "rgba(" <color-value> "," <color-value> "," <color-value> "," <alpha-value> ")"
<hsl-function> ::= "hsl(" <hue-value> "," <saturation-value> "," <lightness-value> ")"
<color-value> ::= <number> | <percentage>
<alpha-value> ::= <number>
<hue-value> ::= <number>
<saturation-value> ::= <percentage>
<lightness-value> ::= <percentage>

<color-name> ::= "red" | "green" | "blue" | "black" | "white" | "transparent" | "inherit"

/* Functions */
<function-call> ::= <function-name> "(" <function-args>? ")"
<function-name> ::= <identifier>
<function-args> ::= <value-list>

<url-function> ::= "url(" <url-value> ")"
<url-value> ::= <string> | <unquoted-url>
<unquoted-url> ::= <url-char>+

/* Strings and Identifiers */
<string> ::= "\"" <string-content> "\"" | "'" <string-content> "'"
<string-content> ::= <string-char>*

<identifier> ::= <identifier-start> <identifier-char>*
<identifier-start> ::= <letter> | "_" | "-"
<identifier-char> ::= <letter> | <digit> | "_" | "-"

<property-name> ::= <identifier>
<tag-name> ::= <identifier>
<pseudo-name> ::= <identifier>
<pseudo-args> ::= <identifier> | <string> | <number>
<keyframes-name> ::= <identifier>
<namespace-prefix> ::= <identifier>
<namespace-uri> ::= <string> | <url-function>
<import-value> ::= <string> | <url-function>

/* Numbers */
<number> ::= <integer> | <decimal>
<integer> ::= <sign>? <digit>+
<decimal> ::= <sign>? <digit>* "." <digit>+
<sign> ::= "+" | "-"

/* Character Classes */
<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
<hex-digit> ::= <digit> | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b" | "c" | "d" | "e" | "f"

<letter> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M"
           | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
           | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m"
           | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<string-char> ::= <letter> | <digit> | <space> | <safe-string-char> | <escape-sequence>
<safe-string-char> ::= "!" | "#" | "$" | "%" | "&" | "(" | ")" | "*" | "+" | "," | "-" | "."
                     | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]" | "^" | "_"
                     | "`" | "{" | "|" | "}" | "~"

<url-char> ::= <letter> | <digit> | "!" | "#" | "$" | "&" | "'" | "(" | ")" | "*" | "+"
             | "," | "-" | "." | "/" | ":" | ";" | "=" | "?" | "@" | "_" | "~"

<escape-sequence> ::= "\\" <escape-char>
<escape-char> ::= <hex-digit> <hex-digit> <hex-digit> <hex-digit> | <any-char>
<any-char> ::= <letter> | <digit> | <punctuation>

<punctuation> ::= "!" | "@" | "#" | "$" | "%" | "^" | "&" | "*" | "(" | ")" | "-" | "_"
                | "+" | "=" | "[" | "]" | "{" | "}" | "|" | "\\" | ":" | ";" | "'" | "\""
                | "," | "." | "/" | "?" | "~" | "`" | "<" | ">"

<space> ::= " " | "\t" | "\n" | "\r"
<whitespace> ::= <space>+
<opt-whitespace> ::= <space>*

/* Comments */
<comment> ::= "/*" <comment-content> "*/"
<comment-content> ::= <comment-char>*
<comment-char> ::= <letter> | <digit> | <space> | <safe-comment-char>
<safe-comment-char> ::= "!" | "#" | "$" | "%" | "&" | "'" | "(" | ")" | "+" | "," | "-"
                      | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]"
                      | "^" | "_" | "`" | "{" | "|" | "}" | "~" | "\\"

/* Symbol Definitions for Cross-Language Validation */
@SYMBOLS {
    id_selector: <id-selector>
    class_selector: <class-selector>
    css_property: <property>
}

